[
    {
        "state": "You are hungry! Let's cook a delicious meal. Check the cookbook in the kitchen for the recipe. Once done, enjoy your meal! -= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/1",
        "infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine toilet",
                "go west",
                "inventory",
                "look",
                "put pork chop on toilet"
            ]
        },
        "action": "inventory",
        "reward": 0,
        "next_state": "You are carrying: a fried pork chop. > -= Bathroom =-0/2",
        "next_infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine toilet",
                "go west",
                "inventory",
                "look",
                "put pork chop on toilet"
            ]
        },
        "done": false,
        "next_action": "examine toilet"
    },
    {
        "state": "You are carrying: a fried pork chop. > -= Bathroom =-0/2",
        "infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine toilet",
                "go west",
                "inventory",
                "look",
                "put pork chop on toilet"
            ]
        },
        "action": "examine toilet",
        "reward": 0,
        "next_state": "The toilet is durable. > -= Bathroom =-0/3",
        "next_infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine toilet",
                "go west",
                "inventory",
                "look",
                "put pork chop on toilet"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "The toilet is durable. > -= Bathroom =-0/3",
        "infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine toilet",
                "go west",
                "inventory",
                "look",
                "put pork chop on toilet"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/4",
        "next_infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine toilet",
                "go west",
                "inventory",
                "look",
                "put pork chop on toilet"
            ]
        },
        "done": false,
        "next_action": "inventory"
    },
    {
        "state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/4",
        "infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine toilet",
                "go west",
                "inventory",
                "look",
                "put pork chop on toilet"
            ]
        },
        "action": "inventory",
        "reward": 0,
        "next_state": "You are carrying: a fried pork chop. > -= Bathroom =-0/5",
        "next_infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine toilet",
                "go west",
                "inventory",
                "look",
                "put pork chop on toilet"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "You are carrying: a fried pork chop. > -= Bathroom =-0/5",
        "infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine toilet",
                "go west",
                "inventory",
                "look",
                "put pork chop on toilet"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Corridor =- You've just shown up in a corridor. There is an exit to the east. Don't worry, there is no door. You need an exit without a door? You should try going south. There is an exit to the west. Don't worry, there is no door. > -= Corridor =-0/6",
        "next_infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "go east",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "drop pork chop"
    },
    {
        "state": "-= Corridor =- You've just shown up in a corridor. There is an exit to the east. Don't worry, there is no door. You need an exit without a door? You should try going south. There is an exit to the west. Don't worry, there is no door. > -= Corridor =-0/6",
        "infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "go east",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "drop pork chop",
        "reward": 0,
        "next_state": "You drop the pork chop on the ground. > -= Corridor =-0/7",
        "next_infos": {
            "admissible_commands": [
                "examine pork chop",
                "go east",
                "go south",
                "go west",
                "inventory",
                "look",
                "take pork chop"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "You drop the pork chop on the ground. > -= Corridor =-0/7",
        "infos": {
            "admissible_commands": [
                "examine pork chop",
                "go east",
                "go south",
                "go west",
                "inventory",
                "look",
                "take pork chop"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/8",
        "next_infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/8",
        "infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/9",
        "next_infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/9",
        "infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/10",
        "next_infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "examine toilet"
    },
    {
        "state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/10",
        "infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "examine toilet",
        "reward": 0,
        "next_state": "The toilet is durable. > -= Bathroom =-0/11",
        "next_infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "The toilet is durable. > -= Bathroom =-0/11",
        "infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/12",
        "next_infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "examine toilet"
    },
    {
        "state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/12",
        "infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "examine toilet",
        "reward": 0,
        "next_state": "The toilet is durable. > -= Bathroom =-0/13",
        "next_infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "The toilet is durable. > -= Bathroom =-0/13",
        "infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/14",
        "next_infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Bathroom =- You find yourself in a bathroom. A typical kind of place. Were you looking for a toilet? Because look over there, it's a toilet. The toilet is white. But the thing hasn't got anything on it. You don't like doors? Why not try going west, that entranceway is not blocked by one. > -= Bathroom =-0/14",
        "infos": {
            "admissible_commands": [
                "examine toilet",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Corridor =- You've just shown up in a corridor. There is an exit to the east. Don't worry, there is no door. You need an exit without a door? You should try going south. There is an exit to the west. Don't worry, there is no door. There is a fried pork chop on the floor. > -= Corridor =-0/15",
        "next_infos": {
            "admissible_commands": [
                "examine pork chop",
                "go east",
                "go south",
                "go west",
                "inventory",
                "look",
                "take pork chop"
            ]
        },
        "done": false,
        "next_action": "take pork chop"
    },
    {
        "state": "-= Corridor =- You've just shown up in a corridor. There is an exit to the east. Don't worry, there is no door. You need an exit without a door? You should try going south. There is an exit to the west. Don't worry, there is no door. There is a fried pork chop on the floor. > -= Corridor =-0/15",
        "infos": {
            "admissible_commands": [
                "examine pork chop",
                "go east",
                "go south",
                "go west",
                "inventory",
                "look",
                "take pork chop"
            ]
        },
        "action": "take pork chop",
        "reward": 0,
        "next_state": "You pick up the pork chop from the ground. > -= Corridor =-0/16",
        "next_infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "go east",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "You pick up the pork chop from the ground. > -= Corridor =-0/16",
        "infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "go east",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Bedroom =- You've entered a bedroom. You make out a bed. The bed is large. But the thing is empty. There is an exit to the east. You don't like doors? Why not try going north, that entranceway is not blocked by one. > -= Bedroom =-0/17",
        "next_infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine bed",
                "go east",
                "go north",
                "inventory",
                "look",
                "put pork chop on bed"
            ]
        },
        "done": false,
        "next_action": "eat pork chop"
    },
    {
        "state": "-= Bedroom =- You've entered a bedroom. You make out a bed. The bed is large. But the thing is empty. There is an exit to the east. You don't like doors? Why not try going north, that entranceway is not blocked by one. > -= Bedroom =-0/17",
        "infos": {
            "admissible_commands": [
                "drop pork chop",
                "eat pork chop",
                "examine bed",
                "go east",
                "go north",
                "inventory",
                "look",
                "put pork chop on bed"
            ]
        },
        "action": "eat pork chop",
        "reward": 0,
        "next_state": "You eat the pork chop. Not bad. *** You lost! *** You scored 0 out of a possible 7, in 17 turns. Would you like to RESTART, RESTORE a saved game, QUIT or UNDO the last command? > -= Bedroom =-0/17",
        "next_infos": {
            "admissible_commands": [
                "examine bed",
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": true,
        "next_action": null
    }
]