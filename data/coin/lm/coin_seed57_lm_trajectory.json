[
    {
        "state": "Who's got a virtual machine and is about to play through an exciting round of TextWorld? You do! Here is your task for today. First, it would be good if you could try to venture north. With that done, make an effort to go to the north. Okay, and then, move north. And then, make an attempt to head west. With that done, head south. Then, move west. If you can succeed at that, go to the north. After that, head north. That done, attempt to travel north. Then, make an effort to go north. After that, make an attempt to head east. And then, make an effort to move east. Then, go south. Once you finish that, move east. And then, retrieve the coin from the floor of the laundromat. And once you've done that, you win! -= Scullery =- You are in a scullery. A typical one. There is an exit to the north. Don't worry, it is unblocked. > -= Scullery =-0/1",
        "infos": {
            "admissible_commands": [
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Cellar =-0/2",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Cellar =-0/2",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Scullery =- You are in a scullery. A typical one. There is an exit to the north. Don't worry, it is unblocked. > -= Scullery =-0/3",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Scullery =- You are in a scullery. A typical one. There is an exit to the north. Don't worry, it is unblocked. > -= Scullery =-0/3",
        "infos": {
            "admissible_commands": [
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Cellar =-0/4",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Cellar =-0/4",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Cellar =-0/5",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Cellar =-0/5",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Scullery =- You are in a scullery. A typical one. There is an exit to the north. Don't worry, it is unblocked. > -= Scullery =-0/6",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Scullery =- You are in a scullery. A typical one. There is an exit to the north. Don't worry, it is unblocked. > -= Scullery =-0/6",
        "infos": {
            "admissible_commands": [
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Cellar =-0/7",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Cellar =-0/7",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Bathroom =- You've just walked into a bathroom. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the south. Don't worry, it is unblocked. > -= Bathroom =-0/8",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Bathroom =- You've just walked into a bathroom. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the south. Don't worry, it is unblocked. > -= Bathroom =-0/8",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Bathroom =- You've just walked into a bathroom. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the south. Don't worry, it is unblocked. > -= Bathroom =-0/9",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Bathroom =- You've just walked into a bathroom. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the south. Don't worry, it is unblocked. > -= Bathroom =-0/9",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Cellar =-0/10",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Cellar =-0/10",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Bathroom =- You've just walked into a bathroom. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the south. Don't worry, it is unblocked. > -= Bathroom =-0/11",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "inventory"
    },
    {
        "state": "-= Bathroom =- You've just walked into a bathroom. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the south. Don't worry, it is unblocked. > -= Bathroom =-0/11",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "inventory",
        "reward": 0,
        "next_state": "You are carrying nothing. > -= Bathroom =-0/12",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "You are carrying nothing. > -= Bathroom =-0/12",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Vault =- Well, here we are in a vault. You don't like doors? Why not try going south, that entranceway is unblocked. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Vault =-0/13",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Vault =- Well, here we are in a vault. You don't like doors? Why not try going south, that entranceway is unblocked. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Vault =-0/13",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Vault =- Well, here we are in a vault. You don't like doors? Why not try going south, that entranceway is unblocked. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Vault =-0/14",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Vault =- Well, here we are in a vault. You don't like doors? Why not try going south, that entranceway is unblocked. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Vault =-0/14",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Bathroom =- You've just walked into a bathroom. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the south. Don't worry, it is unblocked. > -= Bathroom =-0/15",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Bathroom =- You've just walked into a bathroom. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the south. Don't worry, it is unblocked. > -= Bathroom =-0/15",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "You can't go that way. > -= Bathroom =-0/16",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": true,
        "next_action": null
    }
]