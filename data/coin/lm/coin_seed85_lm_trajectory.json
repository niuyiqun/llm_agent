[
    {
        "state": "It's time to explore the amazing world of TextWorld! Here is how to play! First of all, make an attempt to take a trip west. And then, venture north. Once you get around to doing that, venture north. With that done, go to the east. And then, make an effort to travel south. Following that, try to venture west. And then, travel south. With that accomplished, go to the east. Okay, and then, head south. And then, make an attempt to go west. That done, take a trip north. After that, make an attempt to go east. And then, move east. And then, try to move south. If you can get around to doing that, lift the coin from the floor of the office. Got that? Good! -= Garage =- You're now in a garage. You don't like doors? Why not try going west, that entranceway is unblocked. > -= Garage =-0/1",
        "infos": {
            "admissible_commands": [
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Garage =- You're now in a garage. You don't like doors? Why not try going west, that entranceway is unblocked. > -= Garage =-0/2",
        "next_infos": {
            "admissible_commands": [
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Garage =- You're now in a garage. You don't like doors? Why not try going west, that entranceway is unblocked. > -= Garage =-0/2",
        "infos": {
            "admissible_commands": [
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Shower =- You've just sauntered into a shower. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the north. > -= Shower =-0/3",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Shower =- You've just sauntered into a shower. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the north. > -= Shower =-0/3",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Shower =- You've just sauntered into a shower. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the north. > -= Shower =-0/4",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Shower =- You've just sauntered into a shower. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the north. > -= Shower =-0/4",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Chamber =- You've entered a chamber. You don't like doors? Why not try going north, that entranceway is unguarded. You need an unguarded exit? You should try going south. > -= Chamber =-0/5",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Chamber =- You've entered a chamber. You don't like doors? Why not try going north, that entranceway is unguarded. You need an unguarded exit? You should try going south. > -= Chamber =-0/5",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Chamber =- You've entered a chamber. You don't like doors? Why not try going north, that entranceway is unguarded. You need an unguarded exit? You should try going south. > -= Chamber =-0/6",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Chamber =- You've entered a chamber. You don't like doors? Why not try going north, that entranceway is unguarded. You need an unguarded exit? You should try going south. > -= Chamber =-0/6",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Kitchen =- I am sorry to announce that you are now in the kitchen. You need an unguarded exit? You should try going east. You need an unguarded exit? You should try going south. > -= Kitchen =-0/7",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Kitchen =- I am sorry to announce that you are now in the kitchen. You need an unguarded exit? You should try going east. You need an unguarded exit? You should try going south. > -= Kitchen =-0/7",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Kitchen =- I am sorry to announce that you are now in the kitchen. You need an unguarded exit? You should try going east. You need an unguarded exit? You should try going south. > -= Kitchen =-0/8",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Kitchen =- I am sorry to announce that you are now in the kitchen. You need an unguarded exit? You should try going east. You need an unguarded exit? You should try going south. > -= Kitchen =-0/8",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Bedroom =- You're not going to believe this, but you've just entered a bedroom. Okay, just remember what you're here to do, and everything will go great. There is an exit to the south. Don't worry, it is unguarded. There is an unguarded exit to the west. > -= Bedroom =-0/9",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Bedroom =- You're not going to believe this, but you've just entered a bedroom. Okay, just remember what you're here to do, and everything will go great. There is an exit to the south. Don't worry, it is unguarded. There is an unguarded exit to the west. > -= Bedroom =-0/9",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Bedroom =- You're not going to believe this, but you've just entered a bedroom. Okay, just remember what you're here to do, and everything will go great. There is an exit to the south. Don't worry, it is unguarded. There is an unguarded exit to the west. > -= Bedroom =-0/10",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Bedroom =- You're not going to believe this, but you've just entered a bedroom. Okay, just remember what you're here to do, and everything will go great. There is an exit to the south. Don't worry, it is unguarded. There is an unguarded exit to the west. > -= Bedroom =-0/10",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Kitchen =- I am sorry to announce that you are now in the kitchen. You need an unguarded exit? You should try going east. You need an unguarded exit? You should try going south. > -= Kitchen =-0/11",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Kitchen =- I am sorry to announce that you are now in the kitchen. You need an unguarded exit? You should try going east. You need an unguarded exit? You should try going south. > -= Kitchen =-0/11",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Kitchen =- I am sorry to announce that you are now in the kitchen. You need an unguarded exit? You should try going east. You need an unguarded exit? You should try going south. > -= Kitchen =-0/12",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Kitchen =- I am sorry to announce that you are now in the kitchen. You need an unguarded exit? You should try going east. You need an unguarded exit? You should try going south. > -= Kitchen =-0/12",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Chamber =- You've entered a chamber. You don't like doors? Why not try going north, that entranceway is unguarded. You need an unguarded exit? You should try going south. > -= Chamber =-0/13",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Chamber =- You've entered a chamber. You don't like doors? Why not try going north, that entranceway is unguarded. You need an unguarded exit? You should try going south. > -= Chamber =-0/13",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Chamber =- You've entered a chamber. You don't like doors? Why not try going north, that entranceway is unguarded. You need an unguarded exit? You should try going south. > -= Chamber =-0/14",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Chamber =- You've entered a chamber. You don't like doors? Why not try going north, that entranceway is unguarded. You need an unguarded exit? You should try going south. > -= Chamber =-0/14",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Shower =- You've just sauntered into a shower. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the north. > -= Shower =-0/15",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "look"
    },
    {
        "state": "-= Shower =- You've just sauntered into a shower. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the north. > -= Shower =-0/15",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "look",
        "reward": 0,
        "next_state": "-= Shower =- You've just sauntered into a shower. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the north. > -= Shower =-0/16",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": true,
        "next_action": null
    }
]