[
    {
        "state": "Hey, thanks for coming over to the TextWorld today, there is something I need you to do for me. First, it would be fantastic if you could make an attempt to head west. Then, make an effort to take a trip north. Okay, and then, make an effort to take a trip east. And then, go to the south. With that done, make an effort to move east. Next, take a trip east. After that, attempt to go east. And then, make an attempt to venture south. Then, head south. And then, make an effort to go to the east. Then, take a trip south. After that, attempt to take a trip east. And then, take a trip east. With that done, take a trip north. Then, lift the coin from the floor of the workshop. That's it! -= Laundromat =- You are in a laundromat. A typical one. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an unguarded exit to the west. > -= Laundromat =-0/1",
        "infos": {
            "admissible_commands": [
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. There is an exit to the east. Don't worry, it is unguarded. You need an unblocked exit? You should try going north. > -= Cellar =-0/2",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Cellar =- You find yourself in a cellar. A standard kind of place. There is an exit to the east. Don't worry, it is unguarded. You need an unblocked exit? You should try going north. > -= Cellar =-0/2",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Bar =- You are in a bar. A typical kind of place. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the south. > -= Bar =-0/3",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Bar =- You are in a bar. A typical kind of place. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the south. > -= Bar =-0/3",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Chamber =- You find yourself in a chamber. An ordinary kind of place. There is an unblocked exit to the south. You need an unguarded exit? You should try going west. > -= Chamber =-0/4",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Chamber =- You find yourself in a chamber. An ordinary kind of place. There is an unblocked exit to the south. You need an unguarded exit? You should try going west. > -= Chamber =-0/4",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Scullery =- Well I'll be, you are in the place we're calling the scullery. Okay, just remember what you're here to do, and everything will go great. You need an unblocked exit? You should try going east. You need an unguarded exit? You should try going north. > -= Scullery =-0/5",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Scullery =- Well I'll be, you are in the place we're calling the scullery. Okay, just remember what you're here to do, and everything will go great. You need an unblocked exit? You should try going east. You need an unguarded exit? You should try going north. > -= Scullery =-0/5",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Steam Room =- You're now in a steam room. You can barely contain your excitement. You need an unblocked exit? You should try going east. There is an exit to the west. Don't worry, it is unblocked. > -= Steam Room =-0/6",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Steam Room =- You're now in a steam room. You can barely contain your excitement. You need an unblocked exit? You should try going east. There is an exit to the west. Don't worry, it is unblocked. > -= Steam Room =-0/6",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Shower =- You've entered a shower. Okay, just remember what you're here to do, and everything will go great. There is an exit to the east. Don't worry, it is unguarded. There is an unguarded exit to the west. > -= Shower =-0/7",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Shower =- You've entered a shower. Okay, just remember what you're here to do, and everything will go great. There is an exit to the east. Don't worry, it is unguarded. There is an unguarded exit to the west. > -= Shower =-0/7",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Bathroom =- You're now in a bathroom. You decide to start listing off everything you see in the room, as if you were in a text adventure. There is an unblocked exit to the south. You need an unblocked exit? You should try going west. > -= Bathroom =-0/8",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Bathroom =- You're now in a bathroom. You decide to start listing off everything you see in the room, as if you were in a text adventure. There is an unblocked exit to the south. You need an unblocked exit? You should try going west. > -= Bathroom =-0/8",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Sauna =- You find yourself in a sauna. A standard one. You try to gain information on your surroundings by using a technique you call \"looking.\" You need an unguarded exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unblocked. > -= Sauna =-0/9",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Sauna =- You find yourself in a sauna. A standard one. You try to gain information on your surroundings by using a technique you call \"looking.\" You need an unguarded exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unblocked. > -= Sauna =-0/9",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Recreation Zone =- You are in a recreation zone. An usual kind of place. There is an exit to the east. Don't worry, it is unguarded. There is an unguarded exit to the north. > -= Recreation Zone =-0/10",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Recreation Zone =- You are in a recreation zone. An usual kind of place. There is an exit to the east. Don't worry, it is unguarded. There is an unguarded exit to the north. > -= Recreation Zone =-0/10",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Studio =- Well, here we are in the studio. There is an unblocked exit to the south. You need an unguarded exit? You should try going west. > -= Studio =-0/11",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Studio =- Well, here we are in the studio. There is an unblocked exit to the south. You need an unguarded exit? You should try going west. > -= Studio =-0/11",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Attic =- A decrepit notice tells you that you are now in the attic. You need an unblocked exit? You should try going east. You need an unguarded exit? You should try going north. > -= Attic =-0/12",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Attic =- A decrepit notice tells you that you are now in the attic. You need an unblocked exit? You should try going east. You need an unguarded exit? You should try going north. > -= Attic =-0/12",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Canteen =- Well how about that, you are in a place we're calling a canteen. There is an exit to the east. Don't worry, it is unguarded. There is an unblocked exit to the west. > -= Canteen =-0/13",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Canteen =- Well how about that, you are in a place we're calling a canteen. There is an exit to the east. Don't worry, it is unguarded. There is an unblocked exit to the west. > -= Canteen =-0/13",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Dish-Pit =- You arrive in a dish-pit. An ordinary one. You need an unblocked exit? You should try going north. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Dish-Pit =-0/14",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Dish-Pit =- You arrive in a dish-pit. An ordinary one. You need an unblocked exit? You should try going north. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Dish-Pit =-0/14",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Workshop =- You've just sauntered into a workshop. You don't like doors? Why not try going south, that entranceway is unguarded. There is a coin on the floor. > -= Workshop =-0/15",
        "next_infos": {
            "admissible_commands": [
                "examine coin",
                "go south",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "done": false,
        "next_action": "take coin"
    },
    {
        "state": "-= Workshop =- You've just sauntered into a workshop. You don't like doors? Why not try going south, that entranceway is unguarded. There is a coin on the floor. > -= Workshop =-0/15",
        "infos": {
            "admissible_commands": [
                "examine coin",
                "go south",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "action": "take coin",
        "reward": 1,
        "next_state": "You pick up the coin from the ground. Your score has just gone up by one point. *** The End *** You scored 1 out of a possible 1, in 16 turns. Would you like to RESTART, RESTORE a saved game, QUIT or UNDO the last command? > -= Workshop =-0/15",
        "next_infos": {
            "admissible_commands": [
                "drop coin",
                "examine coin",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": true,
        "next_action": null
    }
]