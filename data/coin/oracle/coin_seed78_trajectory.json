[
    {
        "state": "Get ready to pick stuff up and put it in places, because you've just entered TextWorld! First thing I need you to do is to try to venture east. Next, make an effort to travel south. Then, make an attempt to travel east. Once you get through with that, take a trip east. And then, move east. With that done, travel north. Okay, and then, make an attempt to head east. Once you do that, make an effort to travel south. Next, go to the east. And then, try to go south. Following that, make an effort to move south. With that accomplished, move east. With that done, head north. Then, make an attempt to venture north. Then, retrieve the coin from the floor of the office. Once that's all handled, you can stop! -= Launderette =- You find yourself in a launderette. An ordinary one. The room is well lit. You need an unguarded exit? You should try going east. > -= Launderette =-0/1",
        "infos": {
            "admissible_commands": [
                "go east",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Canteen =- Ah, the canteen. This is some kind of canteen, really great typical vibes in this place, a wonderful typical atmosphere. And now, well, you're in it. You don't like doors? Why not try going south, that entranceway is unblocked. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Canteen =-0/2",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Canteen =- Ah, the canteen. This is some kind of canteen, really great typical vibes in this place, a wonderful typical atmosphere. And now, well, you're in it. You don't like doors? Why not try going south, that entranceway is unblocked. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Canteen =-0/2",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Kitchen =- You arrive in a kitchen. An usual kind of place. You don't like doors? Why not try going east, that entranceway is unblocked. You need an unguarded exit? You should try going north. > -= Kitchen =-0/3",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Kitchen =- You arrive in a kitchen. An usual kind of place. You don't like doors? Why not try going east, that entranceway is unblocked. You need an unguarded exit? You should try going north. > -= Kitchen =-0/3",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Scullery =- You've just walked into a scullery. You begin to take stock of what's here. There is an exit to the east. Don't worry, it is unblocked. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Scullery =-0/4",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Scullery =- You've just walked into a scullery. You begin to take stock of what's here. There is an exit to the east. Don't worry, it is unblocked. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Scullery =-0/4",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Cookery =- You've entered a cookery. You decide to start listing off everything you see in the room, as if you were in a text adventure. There is an unblocked exit to the east. You don't like doors? Why not try going west, that entranceway is unblocked. > -= Cookery =-0/5",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Cookery =- You've entered a cookery. You decide to start listing off everything you see in the room, as if you were in a text adventure. There is an unblocked exit to the east. You don't like doors? Why not try going west, that entranceway is unblocked. > -= Cookery =-0/5",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Bathroom =- You arrive in a bathroom. A typical one. You can barely contain your excitement. You need an unguarded exit? You should try going north. There is an unblocked exit to the west. > -= Bathroom =-0/6",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Bathroom =- You arrive in a bathroom. A typical one. You can barely contain your excitement. You need an unguarded exit? You should try going north. There is an unblocked exit to the west. > -= Bathroom =-0/6",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Closet =- You arrive in a closet. An ordinary one. There is an exit to the east. Don't worry, it is unblocked. You don't like doors? Why not try going south, that entranceway is unblocked. > -= Closet =-0/7",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Closet =- You arrive in a closet. An ordinary one. There is an exit to the east. Don't worry, it is unblocked. You don't like doors? Why not try going south, that entranceway is unblocked. > -= Closet =-0/7",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Pantry =- I am sorry to announce that you are now in the pantry. There is an unblocked exit to the south. You need an unblocked exit? You should try going west. > -= Pantry =-0/8",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Pantry =- I am sorry to announce that you are now in the pantry. There is an unblocked exit to the south. You need an unblocked exit? You should try going west. > -= Pantry =-0/8",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Parlor =- You make another one of your grand eccentric entrances into a parlor. You don't like doors? Why not try going east, that entranceway is unguarded. There is an exit to the north. Don't worry, it is unblocked. > -= Parlor =-0/9",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Parlor =- You make another one of your grand eccentric entrances into a parlor. You don't like doors? Why not try going east, that entranceway is unguarded. There is an exit to the north. Don't worry, it is unblocked. > -= Parlor =-0/9",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Studio =- You are in a studio. An usual one. You try to gain information on your surroundings by using a technique you call \"looking.\" There is an unguarded exit to the south. You don't like doors? Why not try going west, that entranceway is unblocked. > -= Studio =-0/10",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Studio =- You are in a studio. An usual one. You try to gain information on your surroundings by using a technique you call \"looking.\" There is an unguarded exit to the south. You don't like doors? Why not try going west, that entranceway is unblocked. > -= Studio =-0/10",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Cellar =- Look at you, bigshot, walking into a cellar like it isn't some huge deal. You need an unguarded exit? You should try going north. There is an unblocked exit to the south. > -= Cellar =-0/11",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Cellar =- Look at you, bigshot, walking into a cellar like it isn't some huge deal. You need an unguarded exit? You should try going north. There is an unblocked exit to the south. > -= Cellar =-0/11",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Cookhouse =- You've entered a cookhouse. You need an unguarded exit? You should try going east. You need an unguarded exit? You should try going north. > -= Cookhouse =-0/12",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Cookhouse =- You've entered a cookhouse. You need an unguarded exit? You should try going east. You need an unguarded exit? You should try going north. > -= Cookhouse =-0/12",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Shower =- You find yourself in a shower. A standard kind of place. You start to take note of what's in the room. You need an unblocked exit? You should try going north. There is an exit to the west. Don't worry, it is unguarded. > -= Shower =-0/13",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Shower =- You find yourself in a shower. A standard kind of place. You start to take note of what's in the room. You need an unblocked exit? You should try going north. There is an exit to the west. Don't worry, it is unguarded. > -= Shower =-0/13",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Spare Room =- You find yourself in a spare room. A standard one. You need an unguarded exit? You should try going north. There is an unguarded exit to the south. > -= Spare Room =-0/14",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Spare Room =- You find yourself in a spare room. A standard one. You need an unguarded exit? You should try going north. There is an unguarded exit to the south. > -= Spare Room =-0/14",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Office =- You find yourself in an office. A normal one. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an exit to the south. Don't worry, it is unblocked. There is a coin on the floor. > -= Office =-0/15",
        "next_infos": {
            "admissible_commands": [
                "examine coin",
                "go south",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "done": false,
        "next_action": "take coin"
    },
    {
        "state": "-= Office =- You find yourself in an office. A normal one. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an exit to the south. Don't worry, it is unblocked. There is a coin on the floor. > -= Office =-0/15",
        "infos": {
            "admissible_commands": [
                "examine coin",
                "go south",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "action": "take coin",
        "reward": 1,
        "next_state": "You pick up the coin from the ground. Your score has just gone up by one point. *** The End *** You scored 1 out of a possible 1, in 16 turns. Would you like to RESTART, RESTORE a saved game, QUIT or UNDO the last command? > -= Office =-0/15",
        "next_infos": {
            "admissible_commands": [
                "drop coin",
                "examine coin",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": true,
        "next_action": null
    }
]