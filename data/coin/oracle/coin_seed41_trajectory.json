[
    {
        "state": "It's time to explore the amazing world of TextWorld! Here is your task for today. First stop, try to take a trip south. Okay, and then, take a trip west. That done, make an effort to head south. And then, try to go west. Once you finish that, venture south. Okay, and then, go to the east. Then, go south. Next, take a trip south. Okay, and then, try to travel south. After that, go west. Okay, and then, go to the north. With that done, make an effort to head west. Then, move south. With that over with, make an effort to travel east. Then, retrieve the coin from the floor of the basement. Alright, thanks! -= Cookery =- Look around you. Take it all in. It's not every day someone gets to be in a cookery. You decide to start listing off everything you see in the room, as if you were in a text adventure. You need an unguarded exit? You should try going south. > -= Cookery =-0/1",
        "infos": {
            "admissible_commands": [
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Scullery =- Well, here we are in a scullery. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the west. Don't worry, it is unblocked. > -= Scullery =-0/2",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Scullery =- Well, here we are in a scullery. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the west. Don't worry, it is unblocked. > -= Scullery =-0/2",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Kitchenette =- You arrive in a kitchenette. There is an exit to the east. Don't worry, it is unguarded. There is an unguarded exit to the south. > -= Kitchenette =-0/3",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Kitchenette =- You arrive in a kitchenette. There is an exit to the east. Don't worry, it is unguarded. There is an unguarded exit to the south. > -= Kitchenette =-0/3",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Cubicle =- You are in a cubicle. An ordinary one. You decide to just list off a complete list of everything you see in the room, because hey, why not? There is an exit to the north. Don't worry, it is unguarded. There is an unguarded exit to the west. > -= Cubicle =-0/4",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Cubicle =- You are in a cubicle. An ordinary one. You decide to just list off a complete list of everything you see in the room, because hey, why not? There is an exit to the north. Don't worry, it is unguarded. There is an unguarded exit to the west. > -= Cubicle =-0/4",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Workshop =- You arrive in a workshop. A normal one. You can barely contain your excitement. You don't like doors? Why not try going east, that entranceway is unblocked. You need an unblocked exit? You should try going south. > -= Workshop =-0/5",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Workshop =- You arrive in a workshop. A normal one. You can barely contain your excitement. You don't like doors? Why not try going east, that entranceway is unblocked. You need an unblocked exit? You should try going south. > -= Workshop =-0/5",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Bar =- You've just shown up in a bar. You can barely contain your excitement. You don't like doors? Why not try going east, that entranceway is unblocked. You need an unblocked exit? You should try going north. > -= Bar =-0/6",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Bar =- You've just shown up in a bar. You can barely contain your excitement. You don't like doors? Why not try going east, that entranceway is unblocked. You need an unblocked exit? You should try going north. > -= Bar =-0/6",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Steam Room =- Well, here we are in a steam room. I guess you better just go and list everything you see here. You need an unblocked exit? You should try going south. There is an exit to the west. Don't worry, it is unguarded. > -= Steam Room =-0/7",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Steam Room =- Well, here we are in a steam room. I guess you better just go and list everything you see here. You need an unblocked exit? You should try going south. There is an exit to the west. Don't worry, it is unguarded. > -= Steam Room =-0/7",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Shower =- You've entered a shower. You don't like doors? Why not try going north, that entranceway is unguarded. There is an unblocked exit to the south. > -= Shower =-0/8",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Shower =- You've entered a shower. You don't like doors? Why not try going north, that entranceway is unguarded. There is an unblocked exit to the south. > -= Shower =-0/8",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Cookhouse =- I never took you for the sort of person who would show up in a cookhouse, but I guess I was wrong. There is an exit to the north. Don't worry, it is unblocked. You need an unblocked exit? You should try going south. > -= Cookhouse =-0/9",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Cookhouse =- I never took you for the sort of person who would show up in a cookhouse, but I guess I was wrong. There is an exit to the north. Don't worry, it is unblocked. You need an unblocked exit? You should try going south. > -= Cookhouse =-0/9",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Bathroom =- You find yourself in a bathroom. A normal one. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an unguarded exit to the north. There is an exit to the west. Don't worry, it is unblocked. > -= Bathroom =-0/10",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Bathroom =- You find yourself in a bathroom. A normal one. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an unguarded exit to the north. There is an exit to the west. Don't worry, it is unblocked. > -= Bathroom =-0/10",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Office =- You find yourself in an office. A typical one. You need an unguarded exit? You should try going east. You don't like doors? Why not try going north, that entranceway is unguarded. > -= Office =-0/11",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Office =- You find yourself in an office. A typical one. You need an unguarded exit? You should try going east. You don't like doors? Why not try going north, that entranceway is unguarded. > -= Office =-0/11",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Spare Room =- You've entered a spare room. There is an unguarded exit to the south. There is an unguarded exit to the west. > -= Spare Room =-0/12",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Spare Room =- You've entered a spare room. There is an unguarded exit to the south. There is an unguarded exit to the west. > -= Spare Room =-0/12",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Restroom =- You are in a restroom. A standard kind of place. There is an exit to the east. Don't worry, it is unblocked. You need an unguarded exit? You should try going south. > -= Restroom =-0/13",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Restroom =- You are in a restroom. A standard kind of place. There is an exit to the east. Don't worry, it is unblocked. You need an unguarded exit? You should try going south. > -= Restroom =-0/13",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Bedroom =- You have stumbled into a bedroom. Not the bedroom you'd expect. No, this is a bedroom. Okay, just remember what you're here to do, and everything will go great. You don't like doors? Why not try going east, that entranceway is unblocked. You need an unguarded exit? You should try going north. > -= Bedroom =-0/14",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Bedroom =- You have stumbled into a bedroom. Not the bedroom you'd expect. No, this is a bedroom. Okay, just remember what you're here to do, and everything will go great. You don't like doors? Why not try going east, that entranceway is unblocked. You need an unguarded exit? You should try going north. > -= Bedroom =-0/14",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Basement =- You arrive in a basement. An ordinary kind of place. Okay, just remember what you're here to do, and everything will go great. You need an unguarded exit? You should try going west. There is a coin on the floor. > -= Basement =-0/15",
        "next_infos": {
            "admissible_commands": [
                "examine coin",
                "go west",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "done": false,
        "next_action": "take coin"
    },
    {
        "state": "-= Basement =- You arrive in a basement. An ordinary kind of place. Okay, just remember what you're here to do, and everything will go great. You need an unguarded exit? You should try going west. There is a coin on the floor. > -= Basement =-0/15",
        "infos": {
            "admissible_commands": [
                "examine coin",
                "go west",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "action": "take coin",
        "reward": 1,
        "next_state": "You pick up the coin from the ground. Your score has just gone up by one point. *** The End *** You scored 1 out of a possible 1, in 16 turns. Would you like to RESTART, RESTORE a saved game, QUIT or UNDO the last command? > -= Basement =-0/15",
        "next_infos": {
            "admissible_commands": [
                "drop coin",
                "examine coin",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": true,
        "next_action": null
    }
]