[
    {
        "state": "Who's got a virtual machine and is about to play through an profound round of TextWorld? You do! First off, make an effort to take a trip south. That done, go east. After that, attempt to go north. And then, make an effort to go north. Following that, move west. And then, make an effort to move south. Next, go west. With that accomplished, go west. That done, move south. And then, head south. Okay, and then, make an attempt to take a trip south. And then, make an attempt to take a trip east. Then, make an attempt to go south. Then, make an effort to go to the west. If you can finish that, lift the coin from the floor of the basement. That's it! -= Workshop =- You've entered a workshop. You don't like doors? Why not try going south, that entranceway is unblocked. > -= Workshop =-0/1",
        "infos": {
            "admissible_commands": [
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Canteen =- You find yourself in a canteen. A standard one. The room is well lit. There is an unblocked exit to the east. You don't like doors? Why not try going north, that entranceway is unguarded. > -= Canteen =-0/2",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Canteen =- You find yourself in a canteen. A standard one. The room is well lit. There is an unblocked exit to the east. You don't like doors? Why not try going north, that entranceway is unguarded. > -= Canteen =-0/2",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Steam Room =- You're now in a steam room. You can barely contain your excitement. You don't like doors? Why not try going north, that entranceway is unblocked. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Steam Room =-0/3",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Steam Room =- You're now in a steam room. You can barely contain your excitement. You don't like doors? Why not try going north, that entranceway is unblocked. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Steam Room =-0/3",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Kitchenette =- You are in a kitchenette. A normal kind of place. You can barely contain your excitement. You need an unguarded exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unblocked. > -= Kitchenette =-0/4",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Kitchenette =- You are in a kitchenette. A normal kind of place. You can barely contain your excitement. You need an unguarded exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unblocked. > -= Kitchenette =-0/4",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Bedroom =- You are in a bedroom. A normal one. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an unguarded exit to the south. There is an exit to the west. Don't worry, it is unblocked. > -= Bedroom =-0/5",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Bedroom =- You are in a bedroom. A normal one. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an unguarded exit to the south. There is an exit to the west. Don't worry, it is unblocked. > -= Bedroom =-0/5",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Cellar =- You've just sauntered into a cellar. You need an unblocked exit? You should try going east. There is an unguarded exit to the south. > -= Cellar =-0/6",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Cellar =- You've just sauntered into a cellar. You need an unblocked exit? You should try going east. There is an unguarded exit to the south. > -= Cellar =-0/6",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Laundromat =- You find yourself in an ordinary kind of place. That is to say, you're in a laundromat. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the west. Don't worry, it is unguarded. > -= Laundromat =-0/7",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Laundromat =- You find yourself in an ordinary kind of place. That is to say, you're in a laundromat. You don't like doors? Why not try going north, that entranceway is unguarded. There is an exit to the west. Don't worry, it is unguarded. > -= Laundromat =-0/7",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Attic =- Well, here we are in the attic. You decide to start listing off everything you see in the room, as if you were in a text adventure. You don't like doors? Why not try going east, that entranceway is unguarded. You need an unguarded exit? You should try going west. > -= Attic =-0/8",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Attic =- Well, here we are in the attic. You decide to start listing off everything you see in the room, as if you were in a text adventure. You don't like doors? Why not try going east, that entranceway is unguarded. You need an unguarded exit? You should try going west. > -= Attic =-0/8",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Garage =- You've just sauntered into a garage. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the south. > -= Garage =-0/9",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Garage =- You've just sauntered into a garage. You don't like doors? Why not try going east, that entranceway is unblocked. There is an unblocked exit to the south. > -= Garage =-0/9",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Study =- You are in a study. An ordinary kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Study =-0/10",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Study =- You are in a study. An ordinary kind of place. You need an unblocked exit? You should try going north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Study =-0/10",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Bathroom =- Of every bathroom you could have shown up in, you had to come round a typical one. There is an unguarded exit to the north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Bathroom =-0/11",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Bathroom =- Of every bathroom you could have shown up in, you had to come round a typical one. There is an unguarded exit to the north. You don't like doors? Why not try going south, that entranceway is unguarded. > -= Bathroom =-0/11",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Cubicle =- You are in a cubicle. An ordinary one. You don't like doors? Why not try going east, that entranceway is unguarded. You need an unguarded exit? You should try going north. > -= Cubicle =-0/12",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Cubicle =- You are in a cubicle. An ordinary one. You don't like doors? Why not try going east, that entranceway is unguarded. You need an unguarded exit? You should try going north. > -= Cubicle =-0/12",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Office =- Look around you. Take it all in. It's not every day someone gets to be in an office. You decide to just list off a complete list of everything you see in the room, because hey, why not? You don't like doors? Why not try going south, that entranceway is unguarded. You don't like doors? Why not try going west, that entranceway is unblocked. > -= Office =-0/13",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Office =- Look around you. Take it all in. It's not every day someone gets to be in an office. You decide to just list off a complete list of everything you see in the room, because hey, why not? You don't like doors? Why not try going south, that entranceway is unguarded. You don't like doors? Why not try going west, that entranceway is unblocked. > -= Office =-0/13",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Spare Room =- You are in a spare room. The room is well lit. There is an exit to the north. Don't worry, it is unguarded. There is an unblocked exit to the west. > -= Spare Room =-0/14",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Spare Room =- You are in a spare room. The room is well lit. There is an exit to the north. Don't worry, it is unguarded. There is an unblocked exit to the west. > -= Spare Room =-0/14",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Basement =- You arrive in a basement. You decide to start listing off everything you see in the room, as if you were in a text adventure. You don't like doors? Why not try going east, that entranceway is unguarded. There is a coin on the floor. > -= Basement =-0/15",
        "next_infos": {
            "admissible_commands": [
                "examine coin",
                "go east",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "done": false,
        "next_action": "take coin"
    },
    {
        "state": "-= Basement =- You arrive in a basement. You decide to start listing off everything you see in the room, as if you were in a text adventure. You don't like doors? Why not try going east, that entranceway is unguarded. There is a coin on the floor. > -= Basement =-0/15",
        "infos": {
            "admissible_commands": [
                "examine coin",
                "go east",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "action": "take coin",
        "reward": 1,
        "next_state": "You pick up the coin from the ground. Your score has just gone up by one point. *** The End *** You scored 1 out of a possible 1, in 16 turns. Would you like to RESTART, RESTORE a saved game, QUIT or UNDO the last command? > -= Basement =-0/15",
        "next_infos": {
            "admissible_commands": [
                "drop coin",
                "examine coin",
                "go east",
                "inventory",
                "look"
            ]
        },
        "done": true,
        "next_action": null
    }
]