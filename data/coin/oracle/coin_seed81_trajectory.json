[
    {
        "state": "You are now playing a exciting game of TextWorld! Here is how to play! First off, attempt to move south. After that, try to take a trip east. With that done, head north. Then, try to go to the west. Once you accomplish that, head north. That done, make an effort to take a trip west. With that over with, head north. If you can get around to doing that, move north. After that, travel east. Once you finish that, make an effort to go to the south. Then, head south. Then, take a trip east. Then, take a trip east. With that done, make an attempt to move north. And then, lift the coin from the floor of the laundromat. That's it! -= Kitchen =- You are in an usual kind of place. That is to say, you're in a kitchen. There is an unguarded exit to the south. > -= Kitchen =-0/1",
        "infos": {
            "admissible_commands": [
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Chamber =- You're now in the chamber. The room is well lit. You need an unguarded exit? You should try going east. There is an unguarded exit to the north. > -= Chamber =-0/2",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Chamber =- You're now in the chamber. The room is well lit. You need an unguarded exit? You should try going east. There is an unguarded exit to the north. > -= Chamber =-0/2",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Recreation Zone =- You are in a recreation zone. There is an unblocked exit to the north. You need an unguarded exit? You should try going west. > -= Recreation Zone =-0/3",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Recreation Zone =- You are in a recreation zone. There is an unblocked exit to the north. You need an unguarded exit? You should try going west. > -= Recreation Zone =-0/3",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Cubicle =- You are in a cubicle. An usual one. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an exit to the south. Don't worry, it is unguarded. You need an unblocked exit? You should try going west. > -= Cubicle =-0/4",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Cubicle =- You are in a cubicle. An usual one. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an exit to the south. Don't worry, it is unguarded. You need an unblocked exit? You should try going west. > -= Cubicle =-0/4",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Bedroom =- You arrive in a bedroom. A normal kind of place. You don't like doors? Why not try going east, that entranceway is unguarded. You need an unguarded exit? You should try going north. > -= Bedroom =-0/5",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Bedroom =- You arrive in a bedroom. A normal kind of place. You don't like doors? Why not try going east, that entranceway is unguarded. You need an unguarded exit? You should try going north. > -= Bedroom =-0/5",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Garage =- I never took you for the sort of person who would show up in a garage, but I guess I was wrong. You need an unblocked exit? You should try going south. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Garage =-0/6",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Garage =- I never took you for the sort of person who would show up in a garage, but I guess I was wrong. You need an unblocked exit? You should try going south. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Garage =-0/6",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Office =- You are in an office. An usual kind of place. You need an unblocked exit? You should try going east. There is an unblocked exit to the north. > -= Office =-0/7",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Office =- You are in an office. An usual kind of place. You need an unblocked exit? You should try going east. There is an unblocked exit to the north. > -= Office =-0/7",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Study =- You've entered a study. You can barely contain your excitement. You need an unblocked exit? You should try going north. You need an unblocked exit? You should try going south. > -= Study =-0/8",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Study =- You've entered a study. You can barely contain your excitement. You need an unblocked exit? You should try going north. You need an unblocked exit? You should try going south. > -= Study =-0/8",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Shower =- Guess what, you are in a place we're calling a shower. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. You don't like doors? Why not try going east, that entranceway is unblocked. There is an exit to the south. Don't worry, it is unblocked. > -= Shower =-0/9",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Shower =- Guess what, you are in a place we're calling a shower. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. You don't like doors? Why not try going east, that entranceway is unblocked. There is an exit to the south. Don't worry, it is unblocked. > -= Shower =-0/9",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Dish-Pit =- You've just walked into a dish-pit. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. You don't like doors? Why not try going south, that entranceway is unblocked. There is an exit to the west. Don't worry, it is unblocked. > -= Dish-Pit =-0/10",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Dish-Pit =- You've just walked into a dish-pit. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. You don't like doors? Why not try going south, that entranceway is unblocked. There is an exit to the west. Don't worry, it is unblocked. > -= Dish-Pit =-0/10",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Attic =- You arrive in an attic. There is an unguarded exit to the north. You don't like doors? Why not try going south, that entranceway is unblocked. > -= Attic =-0/11",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Attic =- You arrive in an attic. There is an unguarded exit to the north. You don't like doors? Why not try going south, that entranceway is unblocked. > -= Attic =-0/11",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Sauna =- Look around you. Take it all in. It's not every day someone gets to be in a sauna. You need an unblocked exit? You should try going east. There is an exit to the north. Don't worry, it is unguarded. > -= Sauna =-0/12",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Sauna =- Look around you. Take it all in. It's not every day someone gets to be in a sauna. You need an unblocked exit? You should try going east. There is an exit to the north. Don't worry, it is unguarded. > -= Sauna =-0/12",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Bar =- You've just sauntered into a bar. There is an unguarded exit to the east. You need an unblocked exit? You should try going west. > -= Bar =-0/13",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Bar =- You've just sauntered into a bar. There is an unguarded exit to the east. You need an unblocked exit? You should try going west. > -= Bar =-0/13",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Launderette =- You're now in a launderette. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an unguarded exit to the north. There is an unguarded exit to the west. > -= Launderette =-0/14",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Launderette =- You're now in a launderette. The room seems oddly familiar, as though it were only superficially different from the other rooms in the building. There is an unguarded exit to the north. There is an unguarded exit to the west. > -= Launderette =-0/14",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Laundromat =- You've just walked into a laundromat. You start to take note of what's in the room. You need an unguarded exit? You should try going south. There is a coin on the floor. > -= Laundromat =-0/15",
        "next_infos": {
            "admissible_commands": [
                "examine coin",
                "go south",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "done": false,
        "next_action": "take coin"
    },
    {
        "state": "-= Laundromat =- You've just walked into a laundromat. You start to take note of what's in the room. You need an unguarded exit? You should try going south. There is a coin on the floor. > -= Laundromat =-0/15",
        "infos": {
            "admissible_commands": [
                "examine coin",
                "go south",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "action": "take coin",
        "reward": 1,
        "next_state": "You pick up the coin from the ground. Your score has just gone up by one point. *** The End *** You scored 1 out of a possible 1, in 16 turns. Would you like to RESTART, RESTORE a saved game, QUIT or UNDO the last command? > -= Laundromat =-0/15",
        "next_infos": {
            "admissible_commands": [
                "drop coin",
                "examine coin",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": true,
        "next_action": null
    }
]