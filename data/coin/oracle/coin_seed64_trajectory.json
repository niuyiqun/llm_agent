[
    {
        "state": "Get ready to pick stuff up and put it in places, because you've just entered TextWorld! Here is how to play! First of all, you could, like, try to take a trip west. Following that, go to the west. And then, try to head west. Following that, go north. And then, attempt to take a trip west. If you can do that, make an attempt to go to the west. Following that, try to go to the north. With that accomplished, go to the west. After that, head north. That done, head north. With that done, make an effort to travel west. If you can finish that, attempt to travel west. Then, attempt to head south. And then, make an effort to head west. Next, lift the coin from the floor of the kitchen. And once you've done that, you win! -= Bar =- You find yourself in a bar. An usual kind of place. You don't like doors? Why not try going west, that entranceway is unblocked. > -= Bar =-0/1",
        "infos": {
            "admissible_commands": [
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Playroom =- You arrive in a playroom. An usual kind of place. You don't like doors? Why not try going east, that entranceway is unblocked. You need an unguarded exit? You should try going west. > -= Playroom =-0/2",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Playroom =- You arrive in a playroom. An usual kind of place. You don't like doors? Why not try going east, that entranceway is unblocked. You need an unguarded exit? You should try going west. > -= Playroom =-0/2",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Dish-Pit =- You've entered a dish-pit. Okay, just remember what you're here to do, and everything will go great. You need an unguarded exit? You should try going east. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Dish-Pit =-0/3",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Dish-Pit =- You've entered a dish-pit. Okay, just remember what you're here to do, and everything will go great. You need an unguarded exit? You should try going east. You don't like doors? Why not try going west, that entranceway is unguarded. > -= Dish-Pit =-0/3",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Cubicle =- You find yourself in a cubicle. A standard one. You try to gain information on your surroundings by using a technique you call \"looking.\" You don't like doors? Why not try going east, that entranceway is unguarded. You don't like doors? Why not try going north, that entranceway is unguarded. > -= Cubicle =-0/4",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Cubicle =- You find yourself in a cubicle. A standard one. You try to gain information on your surroundings by using a technique you call \"looking.\" You don't like doors? Why not try going east, that entranceway is unguarded. You don't like doors? Why not try going north, that entranceway is unguarded. > -= Cubicle =-0/4",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Laundry Place =- You've just shown up in a laundry place. There is an unblocked exit to the south. There is an exit to the west. Don't worry, it is unguarded. > -= Laundry Place =-0/5",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Laundry Place =- You've just shown up in a laundry place. There is an unblocked exit to the south. There is an exit to the west. Don't worry, it is unguarded. > -= Laundry Place =-0/5",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Recreation Zone =- You are in a recreation zone. A normal kind of place. You need an unguarded exit? You should try going east. There is an exit to the west. Don't worry, it is unblocked. > -= Recreation Zone =-0/6",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Recreation Zone =- You are in a recreation zone. A normal kind of place. You need an unguarded exit? You should try going east. There is an exit to the west. Don't worry, it is unblocked. > -= Recreation Zone =-0/6",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Spare Room =- You find yourself in a spare room. An ordinary one. You decide to start listing off everything you see in the room, as if you were in a text adventure. There is an exit to the east. Don't worry, it is unblocked. There is an exit to the north. Don't worry, it is unguarded. > -= Spare Room =-0/7",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Spare Room =- You find yourself in a spare room. An ordinary one. You decide to start listing off everything you see in the room, as if you were in a text adventure. There is an exit to the east. Don't worry, it is unblocked. There is an exit to the north. Don't worry, it is unguarded. > -= Spare Room =-0/7",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Workshop =- You make a grand eccentric entrance into a workshop. Okay, just remember what you're here to do, and everything will go great. There is an exit to the south. Don't worry, it is unblocked. There is an exit to the west. Don't worry, it is unguarded. > -= Workshop =-0/8",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Workshop =- You make a grand eccentric entrance into a workshop. Okay, just remember what you're here to do, and everything will go great. There is an exit to the south. Don't worry, it is unblocked. There is an exit to the west. Don't worry, it is unguarded. > -= Workshop =-0/8",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Office =- Well, here we are in an office. You need an unblocked exit? You should try going east. There is an exit to the north. Don't worry, it is unblocked. > -= Office =-0/9",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Office =- Well, here we are in an office. You need an unblocked exit? You should try going east. There is an exit to the north. Don't worry, it is unblocked. > -= Office =-0/9",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Laundromat =- You are in a laundromat. A standard kind of place. There is an exit to the north. Don't worry, it is unguarded. There is an unblocked exit to the south. > -= Laundromat =-0/10",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "-= Laundromat =- You are in a laundromat. A standard kind of place. There is an exit to the north. Don't worry, it is unguarded. There is an unblocked exit to the south. > -= Laundromat =-0/10",
        "infos": {
            "admissible_commands": [
                "go north",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Scullery =- You arrive in a scullery. An usual one. You don't like doors? Why not try going south, that entranceway is unguarded. You need an unblocked exit? You should try going west. > -= Scullery =-0/11",
        "next_infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Scullery =- You arrive in a scullery. An usual one. You don't like doors? Why not try going south, that entranceway is unguarded. You need an unblocked exit? You should try going west. > -= Scullery =-0/11",
        "infos": {
            "admissible_commands": [
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Vault =- You find yourself in a vault. A normal kind of place. You need an unguarded exit? You should try going east. There is an exit to the west. Don't worry, it is unblocked. > -= Vault =-0/12",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Vault =- You find yourself in a vault. A normal kind of place. You need an unguarded exit? You should try going east. There is an exit to the west. Don't worry, it is unblocked. > -= Vault =-0/12",
        "infos": {
            "admissible_commands": [
                "go east",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Study =- You've entered a study. There is an exit to the east. Don't worry, it is unguarded. There is an unguarded exit to the south. > -= Study =-0/13",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "-= Study =- You've entered a study. There is an exit to the east. Don't worry, it is unguarded. There is an unguarded exit to the south. > -= Study =-0/13",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Bedchamber =- You arrive in a bedchamber. A normal one. There is an unblocked exit to the north. There is an exit to the west. Don't worry, it is unguarded. > -= Bedchamber =-0/14",
        "next_infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go west"
    },
    {
        "state": "-= Bedchamber =- You arrive in a bedchamber. A normal one. There is an unblocked exit to the north. There is an exit to the west. Don't worry, it is unguarded. > -= Bedchamber =-0/14",
        "infos": {
            "admissible_commands": [
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go west",
        "reward": 0,
        "next_state": "-= Kitchen =- Look at you, bigshot, walking into a kitchen like it isn't some huge deal. There is an exit to the east. Don't worry, it is unguarded. There is a coin on the floor. > -= Kitchen =-0/15",
        "next_infos": {
            "admissible_commands": [
                "examine coin",
                "go east",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "done": false,
        "next_action": "take coin"
    },
    {
        "state": "-= Kitchen =- Look at you, bigshot, walking into a kitchen like it isn't some huge deal. There is an exit to the east. Don't worry, it is unguarded. There is a coin on the floor. > -= Kitchen =-0/15",
        "infos": {
            "admissible_commands": [
                "examine coin",
                "go east",
                "inventory",
                "look",
                "take coin"
            ]
        },
        "action": "take coin",
        "reward": 1,
        "next_state": "You pick up the coin from the ground. Your score has just gone up by one point. *** The End *** You scored 1 out of a possible 1, in 16 turns. Would you like to RESTART, RESTORE a saved game, QUIT or UNDO the last command? > -= Kitchen =-0/15",
        "next_infos": {
            "admissible_commands": [
                "drop coin",
                "examine coin",
                "go east",
                "inventory",
                "look"
            ]
        },
        "done": true,
        "next_action": null
    }
]