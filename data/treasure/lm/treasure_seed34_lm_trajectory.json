[
    {
        "state": "Get ready to pick stuff up and put it in places, because you've just entered TextWorld! Here is your task for today. First of all, you could, like, attempt to head north. And then, move north. And then, attempt to go to the west. After that, take the key from the bowl. If you can get your hands on the key, head east. If you can accomplish that, unlock the portal within the pantry. Then, open the portal in the pantry. Then, take a trip north. With that over with, head east. That done, go to the east. Then, try to travel south. And then, go to the south. And then, venture south. That done, recover the latchkey from the floor of the playroom. That's it! -= Kitchenette =- Okay, so you're in a kitchenette, cool, but is it standard? You better believe it is. There is an exit to the east. Don't worry, it is unblocked. You don't like doors? Why not try going north, that entranceway is unblocked. > -= Kitchenette =-0/1",
        "infos": {
            "admissible_commands": [
                "go east",
                "go north",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Dish-Pit =- You are in a dish-pit. An ordinary kind of place. You make out an opened chest in the room. What a letdown! The chest is empty! There is an exit to the east. Don't worry, it is unblocked. There is an unblocked exit to the north. There is an unblocked exit to the west. > -= Dish-Pit =-0/2",
        "next_infos": {
            "admissible_commands": [
                "close chest",
                "examine chest",
                "go east",
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "examine chest"
    },
    {
        "state": "-= Dish-Pit =- You are in a dish-pit. An ordinary kind of place. You make out an opened chest in the room. What a letdown! The chest is empty! There is an exit to the east. Don't worry, it is unblocked. There is an unblocked exit to the north. There is an unblocked exit to the west. > -= Dish-Pit =-0/2",
        "infos": {
            "admissible_commands": [
                "close chest",
                "examine chest",
                "go east",
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "examine chest",
        "reward": 0,
        "next_state": "The chest looks strong, and impossible to break. You can see inside it. > -= Dish-Pit =-0/3",
        "next_infos": {
            "admissible_commands": [
                "close chest",
                "examine chest",
                "go east",
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go north"
    },
    {
        "state": "The chest looks strong, and impossible to break. You can see inside it. > -= Dish-Pit =-0/3",
        "infos": {
            "admissible_commands": [
                "close chest",
                "examine chest",
                "go east",
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go north",
        "reward": 0,
        "next_state": "-= Salon =- You find yourself in a salon. An usual kind of place. You try to gain information on your surroundings by using a technique you call \"looking.\" There is an exit to the east. Don't worry, it is unguarded. There is an unguarded exit to the south. You need an unguarded exit? You should try going west. > -= Salon =-0/4",
        "next_infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go east"
    },
    {
        "state": "-= Salon =- You find yourself in a salon. An usual kind of place. You try to gain information on your surroundings by using a technique you call \"looking.\" There is an exit to the east. Don't worry, it is unguarded. There is an unguarded exit to the south. You need an unguarded exit? You should try going west. > -= Salon =-0/4",
        "infos": {
            "admissible_commands": [
                "go east",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go east",
        "reward": 0,
        "next_state": "-= Basement =- You've just sauntered into a basement. You make out a trunk. The trunk is empty! What a waste of a day! Were you looking for a table? Because look over there, it's a rusty table. But the thing is empty. Oh! Why couldn't there just be stuff on it? You need an unblocked exit? You should try going north. There is an exit to the south. Don't worry, it is unguarded. There is an exit to the west. Don't worry, it is unblocked. > -= Basement =-0/5",
        "next_infos": {
            "admissible_commands": [
                "close trunk",
                "examine rusty table",
                "examine trunk",
                "go north",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "examine trunk"
    },
    {
        "state": "-= Basement =- You've just sauntered into a basement. You make out a trunk. The trunk is empty! What a waste of a day! Were you looking for a table? Because look over there, it's a rusty table. But the thing is empty. Oh! Why couldn't there just be stuff on it? You need an unblocked exit? You should try going north. There is an exit to the south. Don't worry, it is unguarded. There is an exit to the west. Don't worry, it is unblocked. > -= Basement =-0/5",
        "infos": {
            "admissible_commands": [
                "close trunk",
                "examine rusty table",
                "examine trunk",
                "go north",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "examine trunk",
        "reward": 0,
        "next_state": "The trunk looks strong, and impossible to destroy. You can see inside it. > -= Basement =-0/6",
        "next_infos": {
            "admissible_commands": [
                "close trunk",
                "examine rusty table",
                "examine trunk",
                "go north",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "examine rusty table"
    },
    {
        "state": "The trunk looks strong, and impossible to destroy. You can see inside it. > -= Basement =-0/6",
        "infos": {
            "admissible_commands": [
                "close trunk",
                "examine rusty table",
                "examine trunk",
                "go north",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "examine rusty table",
        "reward": 0,
        "next_state": "The rusty table is stable. > -= Basement =-0/7",
        "next_infos": {
            "admissible_commands": [
                "close trunk",
                "examine rusty table",
                "examine trunk",
                "go north",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": false,
        "next_action": "go south"
    },
    {
        "state": "The rusty table is stable. > -= Basement =-0/7",
        "infos": {
            "admissible_commands": [
                "close trunk",
                "examine rusty table",
                "examine trunk",
                "go north",
                "go south",
                "go west",
                "inventory",
                "look"
            ]
        },
        "action": "go south",
        "reward": 0,
        "next_state": "-= Playroom =- You find yourself in a playroom. An usual kind of place. The room is well lit. You don't like doors? Why not try going north, that entranceway is unblocked. You don't like doors? Why not try going west, that entranceway is unblocked. There is a latchkey on the floor. > -= Playroom =-0/8",
        "next_infos": {
            "admissible_commands": [
                "examine latchkey",
                "go north",
                "go west",
                "inventory",
                "look",
                "take latchkey"
            ]
        },
        "done": false,
        "next_action": "take latchkey"
    },
    {
        "state": "-= Playroom =- You find yourself in a playroom. An usual kind of place. The room is well lit. You don't like doors? Why not try going north, that entranceway is unblocked. You don't like doors? Why not try going west, that entranceway is unblocked. There is a latchkey on the floor. > -= Playroom =-0/8",
        "infos": {
            "admissible_commands": [
                "examine latchkey",
                "go north",
                "go west",
                "inventory",
                "look",
                "take latchkey"
            ]
        },
        "action": "take latchkey",
        "reward": 1,
        "next_state": "You pick up the latchkey from the ground. Your score has just gone up by one point. *** The End *** You scored 1 out of a possible 1, in 9 turns. Would you like to RESTART, RESTORE a saved game, QUIT or UNDO the last command? > -= Playroom =-0/8",
        "next_infos": {
            "admissible_commands": [
                "drop latchkey",
                "examine latchkey",
                "go north",
                "go west",
                "inventory",
                "look"
            ]
        },
        "done": true,
        "next_action": null
    }
]